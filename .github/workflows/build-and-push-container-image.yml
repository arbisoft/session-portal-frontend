---
name: Build/Push/Deploy Container Image
on:
  push:
    branches: 
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Configure Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          build-args: |
            UID=${{ secrets.APP_USER_UID }}
            GID=${{ secrets.APP_USER_GID }}
            NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
            NEXT_PUBLIC_CLIENT_ID=${{ secrets.NEXT_PUBLIC_CLIENT_ID }}
          push: true
          tags: ${{ secrets.CONTAINER_IMAGE_REPO }}/session-portal-frontend:${{ github.sha }}, ${{ secrets.CONTAINER_IMAGE_REPO }}/session-portal-frontend:latest

      - name: Create Temporary Deployment Token
        uses: actions/create-github-app-token@v2.0.2
        id: app-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVATE_KEY }}

      - name: Trigger Frontend Deployment
        uses: actions/github-script@v7.0.1
        env:
          OWNER: ${{ secrets.GH_TRIGGER_OWNER }}
          REPO: ${{ secrets.GH_TRIGGER_REPO }}
          WORKFLOW_ID: ${{ secrets.GH_TRIGGER_WORKFLOW_ID }}
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
              await github.rest.actions.createWorkflowDispatch({
                owner: process.env.OWNER,
                repo: process.env.REPO,
                workflow_id: process.env.WORKFLOW_ID,
                ref: 'master'
                inputs: { 'frontend_version': ${{ github.sha }} }
              });
